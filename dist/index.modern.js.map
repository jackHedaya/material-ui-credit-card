{"version":3,"file":"index.modern.js","sources":["../src/formatCreditCard.ts","../src/index.tsx"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport { CreditCardType } from 'credit-card-type/dist/types'\n\nexport default function formatCreditCard(\n  cardNumber: string,\n  type: CreditCardType\n) {\n  if (!type) return cardNumber\n\n  return type.gaps.reduce((prev, curr, i) => {\n    // If the card number does not have the gap position yet\n    if (curr + i + 1 > cardNumber.length) return prev\n\n    // If the space is already there\n    if (prev[curr + i] === ' ') return prev\n\n    return prev.substring(0, curr + i) + ' ' + prev.substring(curr + i)\n  }, cardNumber)\n}\n","import React from 'react'\n// eslint-disable-next-line no-unused-vars\nimport { TextField, TextFieldProps, InputAdornment } from '@material-ui/core'\nimport getCreditCardType, { types as CardType } from 'credit-card-type'\n\n// eslint-disable-next-line no-unused-vars\nimport { CreditCardType } from 'credit-card-type/dist/types'\n\nimport { ReactComponent as AMEX_ICON } from 'payment-icons/min/flat/amex.svg'\nimport { ReactComponent as DEFAULT_ICON } from 'payment-icons/min/flat/default.svg'\nimport { ReactComponent as DINERS_ICON } from 'payment-icons/min/flat/diners.svg'\nimport { ReactComponent as DISCOVER_ICON } from 'payment-icons/min/flat/discover.svg'\nimport { ReactComponent as ELO_ICON } from 'payment-icons/min/flat/elo.svg'\nimport { ReactComponent as HIPERCARD_ICON } from 'payment-icons/min/flat/hipercard.svg'\nimport { ReactComponent as JCB_ICON } from 'payment-icons/min/flat/jcb.svg'\nimport { ReactComponent as MAESTRO_ICON } from 'payment-icons/min/flat/maestro.svg'\nimport { ReactComponent as MASTERCARD_ICON } from 'payment-icons/min/flat/mastercard.svg'\nimport { ReactComponent as UNION_ICON } from 'payment-icons/min/flat/unionpay.svg'\nimport { ReactComponent as VISA_ICON } from 'payment-icons/min/flat/visa.svg'\n\nimport formatCreditCard from './formatCreditCard'\n\ntype CreditCardFieldProps = Omit<TextFieldProps, 'variant'> & {\n  value: string\n  creditCardType?: CreditCardType\n  variant?: 'standard' | 'filled' | 'outlined'\n}\n\nconst TYPE_TO_ICON = {\n  [CardType.AMERICAN_EXPRESS]: AMEX_ICON,\n  [CardType.DINERS_CLUB]: DINERS_ICON,\n  [CardType.DISCOVER]: DISCOVER_ICON,\n  [CardType.ELO]: ELO_ICON,\n  [CardType.HIPERCARD]: HIPERCARD_ICON,\n  [CardType.HIPER]: HIPERCARD_ICON,\n  [CardType.JCB]: JCB_ICON,\n  [CardType.MAESTRO]: MAESTRO_ICON,\n  [CardType.MASTERCARD]: MASTERCARD_ICON,\n  [CardType.MIR]: null,\n  [CardType.UNIONPAY]: UNION_ICON,\n  [CardType.VISA]: VISA_ICON\n}\n\nexport default function CreditCardField(props: CreditCardFieldProps) {\n  const { creditCardType: optionalCreditCardType, value, ...otherProps } = props\n  const creditCardType = optionalCreditCardType ?? getCreditCardType(value)?.[0]\n\n  const CardIcon: React.SFC<React.SVGProps<SVGSVGElement>> =\n    TYPE_TO_ICON[creditCardType?.type] ?? DEFAULT_ICON\n\n  return (\n    <TextField\n      value={formatCreditCard(value, creditCardType)}\n      label='Credit Card #'\n      variant='outlined'\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position='start'>\n            <CardIcon viewBox='0 0 750 471' width='30px' />\n          </InputAdornment>\n        )\n      }}\n      {...otherProps}\n    />\n  )\n}\n"],"names":["formatCreditCard","cardNumber","type","gaps","reduce","prev","curr","i","length","substring","TYPE_TO_ICON","CardType","AMERICAN_EXPRESS","AMEX_ICON","DINERS_CLUB","DINERS_ICON","DISCOVER","DISCOVER_ICON","ELO","ELO_ICON","HIPERCARD","HIPERCARD_ICON","HIPER","JCB","JCB_ICON","MAESTRO","MAESTRO_ICON","MASTERCARD","MASTERCARD_ICON","MIR","UNIONPAY","UNION_ICON","VISA","VISA_ICON","CreditCardField","props","optionalCreditCardType","creditCardType","value","otherProps","getCreditCardType","CardIcon","DEFAULT_ICON","React","TextField","label","variant","InputProps","startAdornment","InputAdornment","position","viewBox","width"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAGwBA,iBACtBC,YACAC;AAEA,MAAI,CAACA,IAAL,EAAW,OAAOD,UAAP;AAEX,SAAOC,IAAI,CAACC,IAAL,CAAUC,MAAV,CAAiB,UAACC,IAAD,EAAOC,IAAP,EAAaC,CAAb;AAEtB,QAAID,IAAI,GAAGC,CAAP,GAAW,CAAX,GAAeN,UAAU,CAACO,MAA9B,EAAsC,OAAOH,IAAP;AAGtC,QAAIA,IAAI,CAACC,IAAI,GAAGC,CAAR,CAAJ,KAAmB,GAAvB,EAA4B,OAAOF,IAAP;AAE5B,WAAOA,IAAI,CAACI,SAAL,CAAe,CAAf,EAAkBH,IAAI,GAAGC,CAAzB,IAA8B,GAA9B,GAAoCF,IAAI,CAACI,SAAL,CAAeH,IAAI,GAAGC,CAAtB,CAA3C;AACD,GARM,EAQJN,UARI,CAAP;AASD;;;ACUD,IAAMS,YAAY,sCACfC,KAAQ,CAACC,gBADM,IACaC,cADb,gBAEfF,KAAQ,CAACG,WAFM,IAEQC,gBAFR,gBAGfJ,KAAQ,CAACK,QAHM,IAGKC,gBAHL,gBAIfN,KAAQ,CAACO,GAJM,IAIAC,gBAJA,gBAKfR,KAAQ,CAACS,SALM,IAKMC,gBALN,gBAMfV,KAAQ,CAACW,KANM,IAMED,gBANF,gBAOfV,KAAQ,CAACY,GAPM,IAOAC,gBAPA,gBAQfb,KAAQ,CAACc,OARM,IAQIC,gBARJ,gBASff,KAAQ,CAACgB,UATM,IASOC,gBATP,gBAUfjB,KAAQ,CAACkB,GAVM,IAUA,IAVA,gBAWflB,KAAQ,CAACmB,QAXM,IAWKC,gBAXL,gBAYfpB,KAAQ,CAACqB,IAZM,IAYCC,gBAZD,gBAAlB;AAeA,SAAwBC,gBAAgBC;;;MACdC,yBAAiDD,MAAjEE;MAAwCC,QAAyBH,MAAzBG;MAAUC,2CAAeJ;;AACzE,MAAME,cAAc,GAAGD,sBAAH,WAAGA,sBAAH,yBAA6BI,iBAAiB,CAACF,KAAD,CAA9C,uDAA6B,mBAA2B,CAA3B,CAAjD;AAEA,MAAMG,QAAQ,4BACZ/B,YAAY,CAAC2B,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEnC,IAAjB,CADA,oCAC0BwC,gBADxC;AAGA,SACEC,mBAAA,CAACC,SAAD;AACEN,IAAAA,KAAK,EAAEtC,gBAAgB,CAACsC,KAAD,EAAQD,cAAR;AACvBQ,IAAAA,KAAK,EAAC;AACNC,IAAAA,OAAO,EAAC;AACRC,IAAAA,UAAU,EAAE;AACVC,MAAAA,cAAc,EACZL,mBAAA,CAACM,cAAD;AAAgBC,QAAAA,QAAQ,EAAC;OAAzB,EACEP,mBAAA,CAACF,QAAD;AAAUU,QAAAA,OAAO,EAAC;AAAcC,QAAAA,KAAK,EAAC;OAAtC,CADF;AAFQ;KAORb,WAXN,CADF;AAeD;;;;"}